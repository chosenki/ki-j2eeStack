/**
 * This class is generated by jOOQ
 */
package com.ki.common.codegen.tables;


import com.ki.common.codegen.Ki;
import com.ki.common.codegen.tables.records.StudentRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Student extends TableImpl<StudentRecord> {

    private static final long serialVersionUID = -184089229;

    /**
     * The reference instance of <code>ki.STUDENT</code>
     */
    public static final Student STUDENT = new Student();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StudentRecord> getRecordType() {
        return StudentRecord.class;
    }

    /**
     * The column <code>ki.STUDENT.ID</code>.
     */
    public final TableField<StudentRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>ki.STUDENT.GRADE_ID</code>.
     */
    public final TableField<StudentRecord, Integer> GRADE_ID = createField("GRADE_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>ki.STUDENT.STUDENT_NAME</code>.
     */
    public final TableField<StudentRecord, String> STUDENT_NAME = createField("STUDENT_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>ki.STUDENT.TEACHER_NAME</code>.
     */
    public final TableField<StudentRecord, String> TEACHER_NAME = createField("TEACHER_NAME", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * Create a <code>ki.STUDENT</code> table reference
     */
    public Student() {
        this("STUDENT", null);
    }

    /**
     * Create an aliased <code>ki.STUDENT</code> table reference
     */
    public Student(String alias) {
        this(alias, STUDENT);
    }

    private Student(String alias, Table<StudentRecord> aliased) {
        this(alias, aliased, null);
    }

    private Student(String alias, Table<StudentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ki.KI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Student as(String alias) {
        return new Student(alias, this);
    }

    /**
     * Rename this table
     */
    public Student rename(String name) {
        return new Student(name, null);
    }
}
