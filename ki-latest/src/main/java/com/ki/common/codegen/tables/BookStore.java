/**
 * This class is generated by jOOQ
 */
package com.ki.common.codegen.tables;


import com.ki.common.codegen.Keys;
import com.ki.common.codegen.Ki;
import com.ki.common.codegen.tables.records.BookStoreRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookStore extends TableImpl<BookStoreRecord> {

    private static final long serialVersionUID = -319604584;

    /**
     * The reference instance of <code>ki.BOOK_STORE</code>
     */
    public static final BookStore BOOK_STORE = new BookStore();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BookStoreRecord> getRecordType() {
        return BookStoreRecord.class;
    }

    /**
     * The column <code>ki.BOOK_STORE.ID</code>.
     */
    public final TableField<BookStoreRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ki.BOOK_STORE.NAME</code>.
     */
    public final TableField<BookStoreRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * Create a <code>ki.BOOK_STORE</code> table reference
     */
    public BookStore() {
        this("BOOK_STORE", null);
    }

    /**
     * Create an aliased <code>ki.BOOK_STORE</code> table reference
     */
    public BookStore(String alias) {
        this(alias, BOOK_STORE);
    }

    private BookStore(String alias, Table<BookStoreRecord> aliased) {
        this(alias, aliased, null);
    }

    private BookStore(String alias, Table<BookStoreRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ki.KI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BookStoreRecord> getPrimaryKey() {
        return Keys.KEY_BOOK_STORE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BookStoreRecord>> getKeys() {
        return Arrays.<UniqueKey<BookStoreRecord>>asList(Keys.KEY_BOOK_STORE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BookStore as(String alias) {
        return new BookStore(alias, this);
    }

    /**
     * Rename this table
     */
    public BookStore rename(String name) {
        return new BookStore(name, null);
    }
}
